{"ast":null,"code":"var _jsxFileName = \"/home/ragnee/Assignment/CRUD_Project/client/src/Components/userhomepage/Userhome.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserHomePage = () => {\n  _s();\n  const [policies, setPolicies] = useState([]);\n  const [myPolicies, setMyPolicies] = useState([]);\n  useEffect(() => {\n    // Fetch all policies from the backend\n    const data = axios.get('http://localhost:8080/user/policy');\n    console.log(data);\n    // .then(response => setPolicies(response?.data?.policies))\n    // .catch(error => console.error('Error fetching policies:', error));\n  }, []);\n  const handleAddToMyPolicies = policyId => {\n    // Check if the policy is already in myPolicies\n    if (myPolicies.some(p => p.policyId === policyId)) {\n      return;\n    }\n\n    // Find the policy in policies\n    const policyToAdd = policies.find(policy => policy.policyId === policyId);\n    if (policyToAdd) {\n      // Add the policy to myPolicies\n      setMyPolicies(prevPolicies => [...prevPolicies, policyToAdd]);\n      const email = localStorage.getItem('email');\n      console.log(\"this is email\", email);\n      // Send a POST request to add the policy to the user's profile\n      axios.post('http://localhost:8080/user/selectPolicy', {\n        email,\n        policyId\n      }).then(response => {\n        // Handle success response if needed\n        console.log(response.data);\n      }).catch(error => {\n        // Handle error response if needed\n        console.error('Error adding policy to user profile:', error);\n      });\n    }\n    alert(`Policy ${policyId} added to your policies`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Policies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PolicyId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Coverage Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Premium Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: policies.map(policy => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: policy.policyId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.coverageAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.premiumAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-button\",\n              onClick: () => handleAddToMyPolicies(policy.policyId),\n              disabled: false,\n              children: \"Add to My Policies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, policy.policyId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(UserHomePage, \"JMaEeN++niE3kb1b54uH9ieWOMc=\");\n_c = UserHomePage;\nexport default UserHomePage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Userhome.css';\n\n// const UserHomePage = () => {\n//     const [policies, setPolicies] = useState([]);\n//     const [myPolicies, setMyPolicies] = useState([]);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:8080/user/policy')\n//             .then(response => setPolicies(response?.data?.policies))\n//             .catch(error => console.error('Error fetching policies:', error));\n//     }, []);\n\n//     const handleAddToMyPolicies = (policyId) => {\n//         // Check if the policy is already in myPolicies\n//         if (myPolicies.some(p => p.policyId === policyId)) {\n//             return;\n//         }\n\n//         // Find the policy in policies\n//         const policyToAdd = policies.find(policy => policy.policyId === policyId);\n//         if (policyToAdd) {\n//             // Add the policy to myPolicies\n//             setMyPolicies(prevPolicies => [...prevPolicies, policyToAdd]);\n//         }\n//     };\n\n//     return (\n//         <div className=\"user-home-container\">\n//             <div className=\"all-policies\">\n//                 <h2>All Policies</h2>\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Policy Id</th>\n//                             <th>Name</th>\n//                             <th>Coverage Amount</th>\n//                             <th>Premium Amount</th>\n//                             <th>Action</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {policies.map(policy => (\n//                             <tr key={policy.policyId}>\n//                                 <td>{policy.policyId}</td>\n//                                 <td>{policy.name}</td>\n//                                 <td>{policy.coverageAmount}</td>\n//                                 <td>{policy.premiumAmount}</td>\n//                                 <td>\n//                                     <button\n//                                         className={`add-button ${myPolicies.some(p => p.policyId === policy.policyId) ? 'added' : ''}`}\n//                                         onClick={() => handleAddToMyPolicies(policy.policyId)}\n//                                         disabled={myPolicies.some(p => p.policyId === policy.policyId)}\n//                                     >\n//                                         {myPolicies.some(p => p.policyId === policy.policyId) ? 'Added' : 'Add to My Policies'}\n//                                     </button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default UserHomePage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import UserDetails from './UserDetails';\n// import MyPoliciesModal from './MyPoliciesModal';\n// import ClaimForm from './ClaimForm'; // Import the ClaimForm component\n// import './Userhome.css';\n\n// const UserHomePage = () => {\n//     const [policies, setPolicies] = useState([]);\n//     const [myPolicies, setMyPolicies] = useState([]);\n//     // const [userDetails, setUserDetails] = useState({});\n//     const [myClaims, setMyClaims] = useState([]);\n//     const [showMyPoliciesModal, setShowMyPoliciesModal] = useState(false);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:8080/user/policy')\n//             .then(response => setPolicies(response?.data?.policies))\n//             .catch(error => console.error('Error fetching policies:', error));\n\n//         axios.get('http://localhost:8080/user/details')\n//             .then(response => setUserDetails(response?.data))\n//             .catch(error => console.error('Error fetching user details:', error));\n//     }, []);\n\n//     // const handleAddToMyPolicies = (policyId) => {\n//     //     const policyToAdd = policies.find(policy => policy.policyId === policyId);\n//     //     if (policyToAdd) {\n//     //         setMyPolicies(prevPolicies => [...prevPolicies, policyToAdd]);\n//     //         addToMyClaims(policyToAdd);\n//     //     }\n//     // };\n\n//     // const addToMyClaims = (policy) => {\n//     //     setMyClaims(prevClaims => [...prevClaims, policy]);\n//     // };\n\n//     return (\n//         <div className=\"user-home-container\">\n//             {/* User Details Section */}\n//             {/* <div className=\"user-details\">\n//                 <UserDetails userDetails={userDetails} />\n//             </div> */}\n\n//             {/* All Policies Section */}\n//             <div className=\"all-policies\">\n//                 <h2>All Policies</h2>\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Coverage Amount</th>\n//                             <th>Premium Amount</th>\n//                             <th>Action</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {policies.map(policy => (\n//                             <tr key={policy.policyId}>\n//                                 <td>{policy.name}</td>\n//                                 <td>{policy.coverageAmount}</td>\n//                                 <td>{policy.premiumAmount}</td>\n//                                 <td>\n//                                     <button\n//                                         className={`add-button ${myPolicies.some(p => p.policyId === policy.policyId) ? 'added' : ''}`}\n//                                         onClick={() => handleAddToMyPolicies(policy.policyId)}\n//                                         disabled={myPolicies.some(p => p.policyId === policy.policyId)}\n//                                     >\n//                                         {myPolicies.some(p => p.policyId === policy.policyId) ? 'Added' : 'Add to My Policies'}\n//                                     </button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n\n//             {/* Claim Form Section */}\n//             {/* <ClaimForm userId={userDetails.email} policies={myPolicies} /> */}\n\n//             {/* My Claims Section */}\n//             {/* <div className=\"my-policies-table\">\n//                 <h2>My Policies</h2>\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Coverage Amount</th>\n//                             <th>Premium Amount</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {myClaims.map(policy => (\n//                             <tr key={policy.policyId}>\n//                                 <td>{policy.name}</td>\n//                                 <td>{policy.coverageAmount}</td>\n//                                 <td>{policy.premiumAmount}</td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div> */}\n//         </div>\n//     );\n// };\n\n// export default UserHomePage;\nvar _c;\n$RefreshReg$(_c, \"UserHomePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserHomePage","_s","policies","setPolicies","myPolicies","setMyPolicies","data","get","console","log","handleAddToMyPolicies","policyId","some","p","policyToAdd","find","policy","prevPolicies","email","localStorage","getItem","post","then","response","catch","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","coverageAmount","premiumAmount","className","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/ragnee/Assignment/CRUD_Project/client/src/Components/userhomepage/Userhome.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UserHomePage = () => {\n    const [policies, setPolicies] = useState([]);\n    const [myPolicies,setMyPolicies]=useState([]);\n\n    useEffect(() => {\n        // Fetch all policies from the backend\n    const data =     axios.get('http://localhost:8080/user/policy')\n    console.log(data)\n            // .then(response => setPolicies(response?.data?.policies))\n            // .catch(error => console.error('Error fetching policies:', error));\n    }, []);\n\n    const handleAddToMyPolicies = (policyId) => {\n     \n            // Check if the policy is already in myPolicies\n            if (myPolicies.some(p => p.policyId === policyId)) {\n                return;\n            }\n        \n            // Find the policy in policies\n            const policyToAdd = policies.find(policy => policy.policyId === policyId);\n            if (policyToAdd) {\n                // Add the policy to myPolicies\n                setMyPolicies(prevPolicies => [...prevPolicies, policyToAdd]);\n                const email = localStorage.getItem('email');\n                console.log(\"this is email\", email)\n                // Send a POST request to add the policy to the user's profile\n                axios.post('http://localhost:8080/user/selectPolicy', {\n                    email,\n                    policyId\n                })\n                .then(response => {\n                    // Handle success response if needed\n                    console.log(response.data);\n                })\n                .catch(error => {\n                    // Handle error response if needed\n                    console.error('Error adding policy to user profile:', error);\n                });\n            }\n        \n\n  alert(`Policy ${policyId} added to your policies`);\n    };\n\n\n    return (\n        <div>\n            <h1>All Policies</h1>\n            <table>\n                <thead>\n                    <tr>\n                        <th>PolicyId</th>\n                        <th>Name</th>\n                        <th>Coverage Amount</th>\n                        <th>Premium Amount</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {policies.map(policy => (\n                        <tr key={policy.policyId}>\n                            <tr>{policy.policyId}</tr>\n                            <td>{policy.name}</td>\n                            <td>{policy.coverageAmount}</td>\n                            <td>{policy.premiumAmount}</td>\n                            <td>\n                                <button\n                                    className=\"add-button\"\n                                    onClick={() => handleAddToMyPolicies(policy.policyId)}\n                                    disabled={false} >\n                                    Add to My Policies\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UserHomePage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Userhome.css';\n\n// const UserHomePage = () => {\n//     const [policies, setPolicies] = useState([]);\n//     const [myPolicies, setMyPolicies] = useState([]);\n   \n//     useEffect(() => {\n//         axios.get('http://localhost:8080/user/policy')\n//             .then(response => setPolicies(response?.data?.policies))\n//             .catch(error => console.error('Error fetching policies:', error));\n//     }, []);\n\n//     const handleAddToMyPolicies = (policyId) => {\n//         // Check if the policy is already in myPolicies\n//         if (myPolicies.some(p => p.policyId === policyId)) {\n//             return;\n//         }\n\n//         // Find the policy in policies\n//         const policyToAdd = policies.find(policy => policy.policyId === policyId);\n//         if (policyToAdd) {\n//             // Add the policy to myPolicies\n//             setMyPolicies(prevPolicies => [...prevPolicies, policyToAdd]);\n//         }\n//     };\n\n//     return (\n//         <div className=\"user-home-container\">\n//             <div className=\"all-policies\">\n//                 <h2>All Policies</h2>\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Policy Id</th>\n//                             <th>Name</th>\n//                             <th>Coverage Amount</th>\n//                             <th>Premium Amount</th>\n//                             <th>Action</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {policies.map(policy => (\n//                             <tr key={policy.policyId}>\n//                                 <td>{policy.policyId}</td>\n//                                 <td>{policy.name}</td>\n//                                 <td>{policy.coverageAmount}</td>\n//                                 <td>{policy.premiumAmount}</td>\n//                                 <td>\n//                                     <button\n//                                         className={`add-button ${myPolicies.some(p => p.policyId === policy.policyId) ? 'added' : ''}`}\n//                                         onClick={() => handleAddToMyPolicies(policy.policyId)}\n//                                         disabled={myPolicies.some(p => p.policyId === policy.policyId)}\n//                                     >\n//                                         {myPolicies.some(p => p.policyId === policy.policyId) ? 'Added' : 'Add to My Policies'}\n//                                     </button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default UserHomePage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import UserDetails from './UserDetails';\n// import MyPoliciesModal from './MyPoliciesModal';\n// import ClaimForm from './ClaimForm'; // Import the ClaimForm component\n// import './Userhome.css';\n\n// const UserHomePage = () => {\n//     const [policies, setPolicies] = useState([]);\n//     const [myPolicies, setMyPolicies] = useState([]);\n//     // const [userDetails, setUserDetails] = useState({});\n//     const [myClaims, setMyClaims] = useState([]);\n//     const [showMyPoliciesModal, setShowMyPoliciesModal] = useState(false);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:8080/user/policy')\n//             .then(response => setPolicies(response?.data?.policies))\n//             .catch(error => console.error('Error fetching policies:', error));\n\n//         axios.get('http://localhost:8080/user/details')\n//             .then(response => setUserDetails(response?.data))\n//             .catch(error => console.error('Error fetching user details:', error));\n//     }, []);\n\n//     // const handleAddToMyPolicies = (policyId) => {\n//     //     const policyToAdd = policies.find(policy => policy.policyId === policyId);\n//     //     if (policyToAdd) {\n//     //         setMyPolicies(prevPolicies => [...prevPolicies, policyToAdd]);\n//     //         addToMyClaims(policyToAdd);\n//     //     }\n//     // };\n\n//     // const addToMyClaims = (policy) => {\n//     //     setMyClaims(prevClaims => [...prevClaims, policy]);\n//     // };\n\n//     return (\n//         <div className=\"user-home-container\">\n//             {/* User Details Section */}\n//             {/* <div className=\"user-details\">\n//                 <UserDetails userDetails={userDetails} />\n//             </div> */}\n\n//             {/* All Policies Section */}\n//             <div className=\"all-policies\">\n//                 <h2>All Policies</h2>\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Coverage Amount</th>\n//                             <th>Premium Amount</th>\n//                             <th>Action</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {policies.map(policy => (\n//                             <tr key={policy.policyId}>\n//                                 <td>{policy.name}</td>\n//                                 <td>{policy.coverageAmount}</td>\n//                                 <td>{policy.premiumAmount}</td>\n//                                 <td>\n//                                     <button\n//                                         className={`add-button ${myPolicies.some(p => p.policyId === policy.policyId) ? 'added' : ''}`}\n//                                         onClick={() => handleAddToMyPolicies(policy.policyId)}\n//                                         disabled={myPolicies.some(p => p.policyId === policy.policyId)}\n//                                     >\n//                                         {myPolicies.some(p => p.policyId === policy.policyId) ? 'Added' : 'Add to My Policies'}\n//                                     </button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n\n//             {/* Claim Form Section */}\n//             {/* <ClaimForm userId={userDetails.email} policies={myPolicies} /> */}\n            \n//             {/* My Claims Section */}\n//             {/* <div className=\"my-policies-table\">\n//                 <h2>My Policies</h2>\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Coverage Amount</th>\n//                             <th>Premium Amount</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {myClaims.map(policy => (\n//                             <tr key={policy.policyId}>\n//                                 <td>{policy.name}</td>\n//                                 <td>{policy.coverageAmount}</td>\n//                                 <td>{policy.premiumAmount}</td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div> */}\n//         </div>\n//     );\n// };\n\n// export default UserHomePage;\n"],"mappings":"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,QAAA,EAAKX,MAAM,CAACmB;UAAa;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/BhC,OAAA;YAAA4B,QAAA,eACI5B,OAAA;cACIqC,SAAS,EAAC,YAAY;cACtBC,OAAO,EAAEA,CAAA,KAAM3B,qBAAqB,CAACM,MAAM,CAACL,QAAQ,CAAE;cACtD2B,QAAQ,EAAE,KAAM;cAAAX,QAAA,EAAE;YAEtB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA,GAZAf,MAAM,CAACL,QAAQ;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAapB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAC9B,EAAA,CAhFID,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AAkFlB,eAAeA,YAAY;;AAwC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAyBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}