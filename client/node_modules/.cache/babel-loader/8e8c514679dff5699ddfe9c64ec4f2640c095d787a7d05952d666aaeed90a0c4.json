{"ast":null,"code":"var _jsxFileName = \"/home/ragnee/Assignment/CRUD_Project/client/src/Components/userhomepage/Userhome.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Userhome.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserHomePage = () => {\n  _s();\n  const [policies, setPolicies] = useState([]);\n  const [myPolicies, setMyPolicies] = useState([]);\n  setUserEmail(user.email);\n  useEffect(() => {\n    axios.get('http://localhost:8080/user/policy').then(response => {\n      var _response$data;\n      return setPolicies(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.policies);\n    }).catch(error => console.error('Error fetching policies:', error));\n    axios.post('http://localhost:8080/user/selectPolicy', {\n      email: userEmail,\n      policyId\n    });\n  }, []);\n  const handleAddToMyPolicies = policyId => {\n    // Check if the policy is already in myPolicies\n    if (myPolicies.some(p => p.policyId === policyId)) {\n      return;\n    }\n\n    // Find the policy in policies\n    const policyToAdd = policies.find(policy => policy.policyId === policyId);\n    if (policyToAdd) {\n      // Add the policy to myPolicies\n      setMyPolicies(prevPolicies => [...prevPolicies, policyToAdd]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-home-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-policies\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Policies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Policy Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Coverage Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Premium Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: policies.map(policy => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: policy.policyId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: policy.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: policy.coverageAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: policy.premiumAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `add-button ${myPolicies.some(p => p.policyId === policy.policyId) ? 'added' : ''}`,\n                onClick: () => handleAddToMyPolicies(policy.policyId),\n                disabled: myPolicies.some(p => p.policyId === policy.policyId),\n                children: myPolicies.some(p => p.policyId === policy.policyId) ? 'Added' : 'Add to My Policies'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, policy.policyId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(UserHomePage, \"WC0/5TxZE5r6OCA3iKxHvwWvcf4=\");\n_c = UserHomePage;\nexport default UserHomePage;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import UserDetails from './UserDetails';\n// import MyPoliciesModal from './MyPoliciesModal';\n// import ClaimForm from './ClaimForm'; // Import the ClaimForm component\n// import './Userhome.css';\n\n// const UserHomePage = () => {\n//     const [policies, setPolicies] = useState([]);\n//     const [myPolicies, setMyPolicies] = useState([]);\n//     // const [userDetails, setUserDetails] = useState({});\n//     const [myClaims, setMyClaims] = useState([]);\n//     const [showMyPoliciesModal, setShowMyPoliciesModal] = useState(false);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:8080/user/policy')\n//             .then(response => setPolicies(response?.data?.policies))\n//             .catch(error => console.error('Error fetching policies:', error));\n\n//         axios.get('http://localhost:8080/user/details')\n//             .then(response => setUserDetails(response?.data))\n//             .catch(error => console.error('Error fetching user details:', error));\n//     }, []);\n\n//     // const handleAddToMyPolicies = (policyId) => {\n//     //     const policyToAdd = policies.find(policy => policy.policyId === policyId);\n//     //     if (policyToAdd) {\n//     //         setMyPolicies(prevPolicies => [...prevPolicies, policyToAdd]);\n//     //         addToMyClaims(policyToAdd);\n//     //     }\n//     // };\n\n//     // const addToMyClaims = (policy) => {\n//     //     setMyClaims(prevClaims => [...prevClaims, policy]);\n//     // };\n\n//     return (\n//         <div className=\"user-home-container\">\n//             {/* User Details Section */}\n//             {/* <div className=\"user-details\">\n//                 <UserDetails userDetails={userDetails} />\n//             </div> */}\n\n//             {/* All Policies Section */}\n//             <div className=\"all-policies\">\n//                 <h2>All Policies</h2>\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Coverage Amount</th>\n//                             <th>Premium Amount</th>\n//                             <th>Action</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {policies.map(policy => (\n//                             <tr key={policy.policyId}>\n//                                 <td>{policy.name}</td>\n//                                 <td>{policy.coverageAmount}</td>\n//                                 <td>{policy.premiumAmount}</td>\n//                                 <td>\n//                                     <button\n//                                         className={`add-button ${myPolicies.some(p => p.policyId === policy.policyId) ? 'added' : ''}`}\n//                                         onClick={() => handleAddToMyPolicies(policy.policyId)}\n//                                         disabled={myPolicies.some(p => p.policyId === policy.policyId)}\n//                                     >\n//                                         {myPolicies.some(p => p.policyId === policy.policyId) ? 'Added' : 'Add to My Policies'}\n//                                     </button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n\n//             {/* Claim Form Section */}\n//             {/* <ClaimForm userId={userDetails.email} policies={myPolicies} /> */}\n\n//             {/* My Claims Section */}\n//             {/* <div className=\"my-policies-table\">\n//                 <h2>My Policies</h2>\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Coverage Amount</th>\n//                             <th>Premium Amount</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {myClaims.map(policy => (\n//                             <tr key={policy.policyId}>\n//                                 <td>{policy.name}</td>\n//                                 <td>{policy.coverageAmount}</td>\n//                                 <td>{policy.premiumAmount}</td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div> */}\n//         </div>\n//     );\n// };\n\n// export default UserHomePage;\nvar _c;\n$RefreshReg$(_c, \"UserHomePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserHomePage","_s","policies","setPolicies","myPolicies","setMyPolicies","setUserEmail","user","email","get","then","response","_response$data","data","catch","error","console","post","userEmail","policyId","handleAddToMyPolicies","some","p","policyToAdd","find","policy","prevPolicies","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","coverageAmount","premiumAmount","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/ragnee/Assignment/CRUD_Project/client/src/Components/userhomepage/Userhome.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Userhome.css';\n\nconst UserHomePage = () => {\n    const [policies, setPolicies] = useState([]);\n    const [myPolicies, setMyPolicies] = useState([]);\n    setUserEmail(user.email);\n    useEffect(() => {\n        axios.get('http://localhost:8080/user/policy')\n            .then(response => setPolicies(response?.data?.policies))\n            .catch(error => console.error('Error fetching policies:', error));\n\n    axios.post('http://localhost:8080/user/selectPolicy', {\n    email: userEmail,\n    policyId\n});\n    }, []);\n\n    const handleAddToMyPolicies = (policyId) => {\n        // Check if the policy is already in myPolicies\n        if (myPolicies.some(p => p.policyId === policyId)) {\n            return;\n        }\n\n        // Find the policy in policies\n        const policyToAdd = policies.find(policy => policy.policyId === policyId);\n        if (policyToAdd) {\n            // Add the policy to myPolicies\n            setMyPolicies(prevPolicies => [...prevPolicies, policyToAdd]);\n        }\n    };\n\n    return (\n        <div className=\"user-home-container\">\n            <div className=\"all-policies\">\n                <h2>All Policies</h2>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Policy Id</th>\n                            <th>Name</th>\n                            <th>Coverage Amount</th>\n                            <th>Premium Amount</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {policies.map(policy => (\n                            <tr key={policy.policyId}>\n                                <td>{policy.policyId}</td>\n                                <td>{policy.name}</td>\n                                <td>{policy.coverageAmount}</td>\n                                <td>{policy.premiumAmount}</td>\n                                <td>\n                                    <button\n                                        className={`add-button ${myPolicies.some(p => p.policyId === policy.policyId) ? 'added' : ''}`}\n                                        onClick={() => handleAddToMyPolicies(policy.policyId)}\n                                        disabled={myPolicies.some(p => p.policyId === policy.policyId)}\n                                    >\n                                        {myPolicies.some(p => p.policyId === policy.policyId) ? 'Added' : 'Add to My Policies'}\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default UserHomePage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import UserDetails from './UserDetails';\n// import MyPoliciesModal from './MyPoliciesModal';\n// import ClaimForm from './ClaimForm'; // Import the ClaimForm component\n// import './Userhome.css';\n\n// const UserHomePage = () => {\n//     const [policies, setPolicies] = useState([]);\n//     const [myPolicies, setMyPolicies] = useState([]);\n//     // const [userDetails, setUserDetails] = useState({});\n//     const [myClaims, setMyClaims] = useState([]);\n//     const [showMyPoliciesModal, setShowMyPoliciesModal] = useState(false);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:8080/user/policy')\n//             .then(response => setPolicies(response?.data?.policies))\n//             .catch(error => console.error('Error fetching policies:', error));\n\n//         axios.get('http://localhost:8080/user/details')\n//             .then(response => setUserDetails(response?.data))\n//             .catch(error => console.error('Error fetching user details:', error));\n//     }, []);\n\n//     // const handleAddToMyPolicies = (policyId) => {\n//     //     const policyToAdd = policies.find(policy => policy.policyId === policyId);\n//     //     if (policyToAdd) {\n//     //         setMyPolicies(prevPolicies => [...prevPolicies, policyToAdd]);\n//     //         addToMyClaims(policyToAdd);\n//     //     }\n//     // };\n\n//     // const addToMyClaims = (policy) => {\n//     //     setMyClaims(prevClaims => [...prevClaims, policy]);\n//     // };\n\n//     return (\n//         <div className=\"user-home-container\">\n//             {/* User Details Section */}\n//             {/* <div className=\"user-details\">\n//                 <UserDetails userDetails={userDetails} />\n//             </div> */}\n\n//             {/* All Policies Section */}\n//             <div className=\"all-policies\">\n//                 <h2>All Policies</h2>\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Coverage Amount</th>\n//                             <th>Premium Amount</th>\n//                             <th>Action</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {policies.map(policy => (\n//                             <tr key={policy.policyId}>\n//                                 <td>{policy.name}</td>\n//                                 <td>{policy.coverageAmount}</td>\n//                                 <td>{policy.premiumAmount}</td>\n//                                 <td>\n//                                     <button\n//                                         className={`add-button ${myPolicies.some(p => p.policyId === policy.policyId) ? 'added' : ''}`}\n//                                         onClick={() => handleAddToMyPolicies(policy.policyId)}\n//                                         disabled={myPolicies.some(p => p.policyId === policy.policyId)}\n//                                     >\n//                                         {myPolicies.some(p => p.policyId === policy.policyId) ? 'Added' : 'Add to My Policies'}\n//                                     </button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n\n//             {/* Claim Form Section */}\n//             {/* <ClaimForm userId={userDetails.email} policies={myPolicies} /> */}\n            \n//             {/* My Claims Section */}\n//             {/* <div className=\"my-policies-table\">\n//                 <h2>My Policies</h2>\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Coverage Amount</th>\n//                             <th>Premium Amount</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {myClaims.map(policy => (\n//                             <tr key={policy.policyId}>\n//                                 <td>{policy.name}</td>\n//                                 <td>{policy.coverageAmount}</td>\n//                                 <td>{policy.premiumAmount}</td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div> */}\n//         </div>\n//     );\n// };\n\n// export default UserHomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}